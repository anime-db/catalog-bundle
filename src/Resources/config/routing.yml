#
# Home
#
home:
    pattern:  /
    defaults: { _controller: AnimeDbCatalogBundle:Home:index }
home_search:
    pattern:  /search.html
    defaults: { _controller: AnimeDbCatalogBundle:Home:search }
home_autocomplete_name:
    pattern:  /autocomplete/name.json
    defaults: { _controller: AnimeDbCatalogBundle:Home:autocompleteName, _format: json }
home_settings:
    pattern:  /settings.html
    defaults: { _controller: AnimeDbCatalogBundle:Home:settings }

#
# Item
#
item_add_manually:
    pattern:  /add-manually.html
    defaults: { _controller: AnimeDbCatalogBundle:Item:addManually }
item_show:
    pattern:  /{id}-{name}/
    defaults: { _controller: AnimeDbCatalogBundle:Item:show }
    requirements:
        id:  \d+
        name: .+
item_change:
    pattern:  /{id}-{name}/change.html
    defaults: { _controller: AnimeDbCatalogBundle:Item:change }
    requirements:
        id:  \d+
        name: .+
item_delete:
    pattern:  /{id}-{name}/delete.html
    defaults: { _controller: AnimeDbCatalogBundle:Item:delete }
    requirements:
        id:  \d+
        name: .+
item_import:
    pattern:  /import/{plugin}.html
    defaults: { _controller: AnimeDbCatalogBundle:Item:import }
item_duplicate:
    pattern:  /match.html
    defaults: { _controller: AnimeDbCatalogBundle:Item:duplicate }

#
# Storage
#
storage_list:
    pattern:  /settings/storage.html
    defaults: { _controller: AnimeDbCatalogBundle:Storage:list }
storage_add:
    pattern:  /settings/storage/add.html
    defaults: { _controller: AnimeDbCatalogBundle:Storage:add }
storage_change:
    pattern:  /settings/storage/{id}/change.html
    defaults: { _controller: AnimeDbCatalogBundle:Storage:change }
    requirements:
        id:  \d+
storage_delete:
    pattern:  /settings/storage/{id}/delete.html
    defaults: { _controller: AnimeDbCatalogBundle:Storage:delete }
    requirements:
        id:  \d+
storage_path:
    pattern:  /settings/storage/path.json
    defaults: { _controller: AnimeDbCatalogBundle:Storage:getPath, _format: json }
storage_scan:
    pattern:  /settings/storage/{id}/scan.html
    defaults: { _controller: AnimeDbCatalogBundle:Storage:scan }
    requirements:
        id:  \d+
storage_scan_output:
    pattern:  /settings/storage/{id}/scan/output.json
    defaults: { _controller: AnimeDbCatalogBundle:Storage:scanOutput, _format: json }
storage_scan_progress:
    pattern:  /settings/storage/{id}/scan/progress.json
    defaults: { _controller: AnimeDbCatalogBundle:Storage:scanProgress, _format: json }

#
# Notice
#
notice_list:
    pattern:  /notice.html
    defaults: { _controller: AnimeDbCatalogBundle:Notice:index }

#
# Update
#
update:
    pattern:  /update.html
    defaults: { _controller: AnimeDbCatalogBundle:Update:index }
update_execute:
    pattern:  /execute_update.html
    defaults: { _controller: AnimeDbCatalogBundle:Update:execute }

#
# Fill
#
fill_filler:
    pattern:  /filler/{plugin}.html
    defaults: { _controller: AnimeDbCatalogBundle:Fill:filler }
fill_search_in_all:
    pattern:  /search/in_all.html
    defaults: { _controller: AnimeDbCatalogBundle:Fill:searchInAll }
fill_search_filler:
    pattern:  /search/filler.html
    defaults: { _controller: AnimeDbCatalogBundle:Fill:searchFiller }
fill_search:
    pattern:  /search/{plugin}.html
    defaults: { _controller: AnimeDbCatalogBundle:Fill:search }

#
# Refill
#
refiller_refill:
    pattern:  /refiller/{plugin}/{field}/refill.html
    defaults: { _controller: AnimeDbCatalogBundle:Refill:refill }
refiller_search:
    pattern:  /refiller/{plugin}/{field}/search.html
    defaults: { _controller: AnimeDbCatalogBundle:Refill:search }
refiller_search_fill:
    pattern:  /refiller/{plugin}/{field}/from_search.html
    defaults: { _controller: AnimeDbCatalogBundle:Refill:fillFromSearch }

#
# Plugin
#
plugin_installed:
    pattern:  /plugin/installed.html
    defaults: { _controller: AnimeDbCatalogBundle:Plugin:installed }
plugin_store:
    pattern:  /plugin/store.html
    defaults: { _controller: AnimeDbCatalogBundle:Plugin:store }
#
# Label
#
label:
    pattern:  /labels.html
    defaults: { _controller: AnimeDbCatalogBundle:Label:index }

#
# Installation
#
install: # stap 1
    pattern:  /install/
    defaults: { _controller: AnimeDbCatalogBundle:Install:index }
install_add_storage: # stap 2
    pattern:  /install/add_storage.html
    defaults: { _controller: AnimeDbCatalogBundle:Install:addStorage }
install_what_you_want: # stap 3
    pattern:  /install/what_you_want.html
    defaults: { _controller: AnimeDbCatalogBundle:Install:whatYouWant }
install_storage_scan: # stap 4
    pattern:  /install/scan_storage.html
    defaults: { _controller: AnimeDbCatalogBundle:Install:scan }
    requirements:
        id:  \d+
install_end: # stap 5
    pattern:  /install/end.html
    defaults: { _controller: AnimeDbCatalogBundle:Install:end }
install_end_skip: # skip to stap 5
    pattern:  /install/end/{from}.html
    defaults: { _controller: AnimeDbCatalogBundle:Install:end }
