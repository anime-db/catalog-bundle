services:
    # Plugins chain
    anime_db.plugin.filler:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Fill\Filler\Chain
    anime_db.plugin.search_fill:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Fill\Search\Chain
        arguments: [ %anime_db.catalog.default_search% ]
    anime_db.plugin.refiller:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Fill\Refiller\Chain
    anime_db.plugin.import:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Import\Chain
    anime_db.plugin.export:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Export\Chain
    anime_db.plugin.item:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Item\Chain
    anime_db.plugin.setting:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Setting\Chain

    # Twig extension
    anime_db.catalog.twig_extension:
        class: AnimeDb\Bundle\CatalogBundle\Service\TwigExtension
        tags:
            - { name: twig.extension }

    # Form
    anime_db.form.type.item:
        class: AnimeDb\Bundle\CatalogBundle\Form\Entity\Item
        tags:
            - { name: form.type, alias: anime_db_catalog_entity_item }
        calls:
            - [ setRefillerChain, [ @anime_db.plugin.refiller ] ]
            - [ setTemplating, [ @templating ] ]
            - [ setViewSorter, [ @anime_db.form.view_sorter ] ]
            - [ setRouter, [ @router ] ]
    anime_db.form.type.search:
        class: AnimeDb\Bundle\CatalogBundle\Form\Search
        tags:
            - { name: form.type, alias: anime_db_catalog_search_items }
        calls:
            - [ setTranslator, [ @translator ] ]
            - [ setRouter, [ @router ] ]
    anime_db.form.type.refill.country:
        class: AnimeDb\Bundle\CatalogBundle\Form\Plugin\Refiller\Country
        calls:
            - [ setViewSorter, [ @anime_db.form.view_sorter ] ]
    anime_db.form.type.refill.studio:
        class: AnimeDb\Bundle\CatalogBundle\Form\Plugin\Refiller\Studio
        calls:
            - [ setViewSorter, [ @anime_db.form.view_sorter ] ]
    anime_db.form.type.refill.gengres:
        class: AnimeDb\Bundle\CatalogBundle\Form\Plugin\Refiller\Gengres
        calls:
            - [ setViewSorter, [ @anime_db.form.view_sorter ] ]
    anime_db.form.type.labels:
        class: AnimeDb\Bundle\CatalogBundle\Form\Settings\Labels
        calls:
            - [ setViewSorter, [ @anime_db.form.view_sorter ] ]
    anime_db.form.notice.filter:
        class: AnimeDb\Bundle\CatalogBundle\Form\Notice\Filter
        arguments: [ @doctrine.orm.entity_manager ]
        tags:
            - { name: form.type, alias: anime_db_catalog_notices_filter }
    anime_db.form.view_sorter:
        class: AnimeDb\Bundle\CatalogBundle\Form\ViewSorter
        arguments: [ %locale% ]


    anime_db.catalog.listener.scan_storage:
        class: AnimeDb\Bundle\CatalogBundle\Event\Listener\ScanStorage
        arguments: [ @doctrine.orm.entity_manager, @templating, @anime_db.plugin.search_fill, @router, @form.factory ]
        tags:
            - { name: kernel.event_listener, event: anime_db.storage.update_item_files, method: onUpdateItemFiles }
            - { name: kernel.event_listener, event: anime_db.storage.delete_item_files, method: onDeleteItemFiles }
            - { name: kernel.event_listener, event: anime_db.storage.detected_new_files, method: onDetectedNewFilesTryAdd }
            - { name: kernel.event_listener, event: anime_db.storage.detected_new_files, method: onDetectedNewFilesSendNotice, priority: -255 }
            - { name: kernel.event_listener, event: anime_db.storage.add_new_item, method: onAddNewItemPersistIt, priority: -200 }
            - { name: kernel.event_listener, event: anime_db.storage.add_new_item, method: onAddNewItemSendNotice, priority: -255 }

    anime_db.catalog.listener.package:
        class: AnimeDb\Bundle\CatalogBundle\Event\Listener\Package
        arguments: [ %kernel.root_dir% ]
        tags:
            - { name: kernel.event_listener, event: anime_db.package.installed, method: onInstall }
            - { name: kernel.event_listener, event: anime_db.package.updated, method: onUpdate }

    anime_db.search.driver.sql_like:
        class: AnimeDb\Bundle\CatalogBundle\Service\Search\Driver\SqlLike
        arguments: [ @doctrine ]
        public: false

    anime_db.search:
        class: AnimeDb\Bundle\CatalogBundle\Service\Search\Manager
        arguments: [ @anime_db.search.driver ]

    anime_db.api_client:
        class: AnimeDb\Bundle\CatalogBundle\Service\ApiClient
        arguments: [ %locale% ]
