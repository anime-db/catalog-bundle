services:
    anime_db.catalog.listener.scan_storage:
        class: AnimeDb\Bundle\CatalogBundle\Event\Listener\ScanStorage
        arguments: [ @doctrine.orm.entity_manager, @templating, @anime_db.plugin.search_fill, @router, @form.factory ]
        tags:
            - { name: kernel.event_listener, event: anime_db.storage.update_item_files, method: onUpdateItemFiles }
            - { name: kernel.event_listener, event: anime_db.storage.delete_item_files, method: onDeleteItemFiles }
            - { name: kernel.event_listener, event: anime_db.storage.detected_new_files, method: onDetectedNewFilesTryAdd }
            - { name: kernel.event_listener, event: anime_db.storage.detected_new_files, method: onDetectedNewFilesSendNotice, priority: -255 }
            - { name: kernel.event_listener, event: anime_db.storage.add_new_item, method: onAddNewItemPersistIt, priority: -200 }
            - { name: kernel.event_listener, event: anime_db.storage.add_new_item, method: onAddNewItemSendNotice, priority: -255 }

    anime_db.catalog.listener.package:
        class: AnimeDb\Bundle\CatalogBundle\Event\Listener\Package
        arguments: [ %kernel.root_dir% ]
        tags:
            - { name: kernel.event_listener, event: anime_db.package.installed, method: onInstall }
            - { name: kernel.event_listener, event: anime_db.package.updated, method: onUpdate }

    anime_db.catalog.listener.entity:
        class: AnimeDb\Bundle\CatalogBundle\Event\Listener\Entity
        arguments: [ @filesystem, %anime_db.downloader.root% ]
        tags:
            - { name: doctrine.event_listener, event: prePersist }
